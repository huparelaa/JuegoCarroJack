class Animacion_cono{
	function void conoEntero(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +64, 1);
		do Memory.poke(memAddress +96, 1);
		do Memory.poke(memAddress +128, 1);
		do Memory.poke(memAddress +160, 1);
		do Memory.poke(memAddress +192, 6);
		do Memory.poke(memAddress +224, 6);
		do Memory.poke(memAddress +256, 6);
		do Memory.poke(memAddress +288, 6);
		do Memory.poke(memAddress +320, 7);
		do Memory.poke(memAddress +352, 7);
		do Memory.poke(memAddress +384, 25);
		do Memory.poke(memAddress +416, 25);
		do Memory.poke(memAddress +448, 24);
		do Memory.poke(memAddress +480, 24);
		do Memory.poke(memAddress +512, 24);
		do Memory.poke(memAddress +544, 24);
		do Memory.poke(memAddress +576, 30);
		do Memory.poke(memAddress +608, 30);
		do Memory.poke(memAddress +640, 103);
		do Memory.poke(memAddress +672, 103);
		do Memory.poke(memAddress +704, 97);
		do Memory.poke(memAddress +736, 97);
		do Memory.poke(memAddress +768, 96);
		do Memory.poke(memAddress +800, 96);
		do Memory.poke(memAddress +832, 2040);
		do Memory.poke(memAddress +864, 2040);
		do Memory.poke(memAddress +896, 6558);
		do Memory.poke(memAddress +928, 6558);
		do Memory.poke(memAddress +960, 6559);
		do Memory.poke(memAddress +992, 6559);
		do Memory.poke(memAddress +1024, 6535);
		do Memory.poke(memAddress +1056, 6535);
		do Memory.poke(memAddress +1088, 24960);
		do Memory.poke(memAddress +1120, 24960);
		do Memory.poke(memAddress +1152, 25056);
		do Memory.poke(memAddress +1184, 25056);
		do Memory.poke(memAddress +1216, 24703);
		do Memory.poke(memAddress +1248, 24703);
		do Memory.poke(memAddress +1280, 24607);
		do Memory.poke(memAddress +1312, 24607);
		do Memory.poke(memAddress +1344, 30720);
		do Memory.poke(memAddress +1376, 30720);
		do Memory.poke(memAddress +1408, 8191);
		do Memory.poke(memAddress +1440, 8191);
		do Memory.poke(memAddress +1472, 1023);
		do Memory.poke(memAddress +1504, 1023);
		// column 1
		// column 2
		// column -2
		do Memory.poke(memAddress +830, ~32767);
		do Memory.poke(memAddress +862, ~32767);
		do Memory.poke(memAddress +894, 24576);
		do Memory.poke(memAddress +926, 24576);
		do Memory.poke(memAddress +958, 24576);
		do Memory.poke(memAddress +990, 24576);
		do Memory.poke(memAddress +1022, 24576);
		do Memory.poke(memAddress +1054, 24576);
		do Memory.poke(memAddress +1086, 6144);
		do Memory.poke(memAddress +1118, 6144);
		do Memory.poke(memAddress +1150, 6144);
		do Memory.poke(memAddress +1182, 6144);
		do Memory.poke(memAddress +1214, 6144);
		do Memory.poke(memAddress +1246, 6144);
		do Memory.poke(memAddress +1278, 6144);
		do Memory.poke(memAddress +1310, 6144);
		do Memory.poke(memAddress +1342, 6144);
		do Memory.poke(memAddress +1374, 30720);
		do Memory.poke(memAddress +1406, -8192);
		do Memory.poke(memAddress +1438, -8192);
		do Memory.poke(memAddress +1470, ~32767);
		do Memory.poke(memAddress +1502, ~32767);
		// column -1
		do Memory.poke(memAddress -1, 30720);
		do Memory.poke(memAddress +31, 30720);
		do Memory.poke(memAddress +63, -31232);
		do Memory.poke(memAddress +95, -31232);
		do Memory.poke(memAddress +127, -31232);
		do Memory.poke(memAddress +159, -31232);
		do Memory.poke(memAddress +191, 384);
		do Memory.poke(memAddress +223, 384);
		do Memory.poke(memAddress +255, 384);
		do Memory.poke(memAddress +287, 384);
		do Memory.poke(memAddress +319, -30848);
		do Memory.poke(memAddress +351, -30848);
		do Memory.poke(memAddress +383, -416);
		do Memory.poke(memAddress +415, -416);
		do Memory.poke(memAddress +447, 30816);
		do Memory.poke(memAddress +479, 30816);
		do Memory.poke(memAddress +511, 96);
		do Memory.poke(memAddress +543, 96);
		do Memory.poke(memAddress +575, 480);
		do Memory.poke(memAddress +607, 480);
		do Memory.poke(memAddress +639, -104);
		do Memory.poke(memAddress +671, -104);
		do Memory.poke(memAddress +703, -488);
		do Memory.poke(memAddress +735, -488);
		do Memory.poke(memAddress +767, 24);
		do Memory.poke(memAddress +799, 24);
		do Memory.poke(memAddress +831, 127);
		do Memory.poke(memAddress +863, 127);
		do Memory.poke(memAddress +895, 486);
		do Memory.poke(memAddress +927, 486);
		do Memory.poke(memAddress +959, -26);
		do Memory.poke(memAddress +991, -26);
		do Memory.poke(memAddress +1023, -122);
		do Memory.poke(memAddress +1055, -122);
		do Memory.poke(memAddress +1087, 6);
		do Memory.poke(memAddress +1119, 6);
		do Memory.poke(memAddress +1151, 30);
		do Memory.poke(memAddress +1183, 30);
		do Memory.poke(memAddress +1215, -8);
		do Memory.poke(memAddress +1247, -8);
		do Memory.poke(memAddress +1279, -32);
		do Memory.poke(memAddress +1311, -32);
		do Memory.poke(memAddress +1407, -1);
		do Memory.poke(memAddress +1439, -1);
		do Memory.poke(memAddress +1471, -1);
		do Memory.poke(memAddress +1503, -1);
		return;
	}

	function void cono1(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +384, 1);
		do Memory.poke(memAddress +416, 1);
		do Memory.poke(memAddress +448, 1);
		do Memory.poke(memAddress +480, 1);
		do Memory.poke(memAddress +512, 1);
		do Memory.poke(memAddress +544, 1);
		do Memory.poke(memAddress +576, 1);
		do Memory.poke(memAddress +608, 1);
		do Memory.poke(memAddress +640, 6);
		do Memory.poke(memAddress +672, 6);
		do Memory.poke(memAddress +704, 6);
		do Memory.poke(memAddress +736, 6);
		do Memory.poke(memAddress +768, 6);
		do Memory.poke(memAddress +800, 6);
		do Memory.poke(memAddress +832, 127);
		do Memory.poke(memAddress +864, 127);
		do Memory.poke(memAddress +896, 409);
		do Memory.poke(memAddress +928, 409);
		do Memory.poke(memAddress +960, 409);
		do Memory.poke(memAddress +992, 409);
		do Memory.poke(memAddress +1024, 408);
		do Memory.poke(memAddress +1056, 408);
		do Memory.poke(memAddress +1088, 1560);
		do Memory.poke(memAddress +1120, 1560);
		do Memory.poke(memAddress +1152, 1566);
		do Memory.poke(memAddress +1184, 1566);
		do Memory.poke(memAddress +1216, 1543);
		do Memory.poke(memAddress +1248, 1543);
		do Memory.poke(memAddress +1280, 1537);
		do Memory.poke(memAddress +1312, 1537);
		do Memory.poke(memAddress +1344, 1920);
		do Memory.poke(memAddress +1376, 1920);
		do Memory.poke(memAddress +1408, 511);
		do Memory.poke(memAddress +1440, 511);
		do Memory.poke(memAddress +1472, 63);
		do Memory.poke(memAddress +1504, 63);
		// column 1
		// column 2
		// column -2
		do Memory.poke(memAddress +638, ~32767);
		do Memory.poke(memAddress +670, ~32767);
		do Memory.poke(memAddress +702, ~32767);
		do Memory.poke(memAddress +734, ~32767);
		do Memory.poke(memAddress +766, ~32767);
		do Memory.poke(memAddress +798, ~32767);
		do Memory.poke(memAddress +830, -2048);
		do Memory.poke(memAddress +862, -2048);
		do Memory.poke(memAddress +894, 26112);
		do Memory.poke(memAddress +926, 26112);
		do Memory.poke(memAddress +958, 26112);
		do Memory.poke(memAddress +990, 26112);
		do Memory.poke(memAddress +1022, 26112);
		do Memory.poke(memAddress +1054, 26112);
		do Memory.poke(memAddress +1086, 24576);
		do Memory.poke(memAddress +1118, 24576);
		do Memory.poke(memAddress +1150, -8192);
		do Memory.poke(memAddress +1182, -8192);
		do Memory.poke(memAddress +1214, ~32767);
		do Memory.poke(memAddress +1246, ~32767);
		do Memory.poke(memAddress +1374, 1536);
		do Memory.poke(memAddress +1406, -512);
		do Memory.poke(memAddress +1438, -512);
		do Memory.poke(memAddress +1470, -2048);
		do Memory.poke(memAddress +1502, -2048);
		// column -1
		do Memory.poke(memAddress -1, 1920);
		do Memory.poke(memAddress +31, 1920);
		do Memory.poke(memAddress +63, 6240);
		do Memory.poke(memAddress +95, 6240);
		do Memory.poke(memAddress +127, 6240);
		do Memory.poke(memAddress +159, 6240);
		do Memory.poke(memAddress +191, 24600);
		do Memory.poke(memAddress +223, 24600);
		do Memory.poke(memAddress +255, 24600);
		do Memory.poke(memAddress +287, 24600);
		do Memory.poke(memAddress +319, 30840);
		do Memory.poke(memAddress +351, 30840);
		do Memory.poke(memAddress +383, -24602);
		do Memory.poke(memAddress +415, -24602);
		do Memory.poke(memAddress +447, -30842);
		do Memory.poke(memAddress +479, -30842);
		do Memory.poke(memAddress +511, -32762);
		do Memory.poke(memAddress +543, -32762);
		do Memory.poke(memAddress +575, -8162);
		do Memory.poke(memAddress +607, -8162);
		do Memory.poke(memAddress +639, 32761);
		do Memory.poke(memAddress +671, 32761);
		do Memory.poke(memAddress +703, 8161);
		do Memory.poke(memAddress +735, 8161);
		do Memory.poke(memAddress +767, 1);
		do Memory.poke(memAddress +799, 1);
		do Memory.poke(memAddress +831, -32761);
		do Memory.poke(memAddress +863, -32761);
		do Memory.poke(memAddress +895, -8162);
		do Memory.poke(memAddress +927, -8162);
		do Memory.poke(memAddress +959, -2);
		do Memory.poke(memAddress +991, -2);
		do Memory.poke(memAddress +1023, 32760);
		do Memory.poke(memAddress +1055, 32760);
		do Memory.poke(memAddress +1151, 1);
		do Memory.poke(memAddress +1183, 1);
		do Memory.poke(memAddress +1215, -1);
		do Memory.poke(memAddress +1247, -1);
		do Memory.poke(memAddress +1279, -2);
		do Memory.poke(memAddress +1311, -2);
		do Memory.poke(memAddress +1407, -1);
		do Memory.poke(memAddress +1439, -1);
		do Memory.poke(memAddress +1471, -1);
		do Memory.poke(memAddress +1503, -1);
		return;
	}

	function void cono2(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +832, 7);
		do Memory.poke(memAddress +864, 7);
		do Memory.poke(memAddress +896, 25);
		do Memory.poke(memAddress +928, 25);
		do Memory.poke(memAddress +960, 25);
		do Memory.poke(memAddress +992, 25);
		do Memory.poke(memAddress +1024, 25);
		do Memory.poke(memAddress +1056, 25);
		do Memory.poke(memAddress +1088, 97);
		do Memory.poke(memAddress +1120, 97);
		do Memory.poke(memAddress +1152, 97);
		do Memory.poke(memAddress +1184, 97);
		do Memory.poke(memAddress +1216, 96);
		do Memory.poke(memAddress +1248, 96);
		do Memory.poke(memAddress +1280, 96);
		do Memory.poke(memAddress +1312, 96);
		do Memory.poke(memAddress +1344, 120);
		do Memory.poke(memAddress +1376, 120);
		do Memory.poke(memAddress +1408, 31);
		do Memory.poke(memAddress +1440, 31);
		do Memory.poke(memAddress +1472, 3);
		do Memory.poke(memAddress +1504, 3);
		// column 1
		// column -2
		do Memory.poke(memAddress +190, ~32767);
		do Memory.poke(memAddress +222, ~32767);
		do Memory.poke(memAddress +254, ~32767);
		do Memory.poke(memAddress +286, ~32767);
		do Memory.poke(memAddress +318, ~32767);
		do Memory.poke(memAddress +350, ~32767);
		do Memory.poke(memAddress +382, 24576);
		do Memory.poke(memAddress +414, 24576);
		do Memory.poke(memAddress +446, 24576);
		do Memory.poke(memAddress +478, 24576);
		do Memory.poke(memAddress +510, 24576);
		do Memory.poke(memAddress +542, 24576);
		do Memory.poke(memAddress +574, -8192);
		do Memory.poke(memAddress +606, -8192);
		do Memory.poke(memAddress +638, -26624);
		do Memory.poke(memAddress +670, -26624);
		do Memory.poke(memAddress +702, 6144);
		do Memory.poke(memAddress +734, 6144);
		do Memory.poke(memAddress +766, 6144);
		do Memory.poke(memAddress +798, 6144);
		do Memory.poke(memAddress +830, 32640);
		do Memory.poke(memAddress +862, 32640);
		do Memory.poke(memAddress +894, -6656);
		do Memory.poke(memAddress +926, -6656);
		do Memory.poke(memAddress +958, -6656);
		do Memory.poke(memAddress +990, -6656);
		do Memory.poke(memAddress +1022, -31232);
		do Memory.poke(memAddress +1054, -31232);
		do Memory.poke(memAddress +1086, 1536);
		do Memory.poke(memAddress +1118, 1536);
		do Memory.poke(memAddress +1150, 7680);
		do Memory.poke(memAddress +1182, 7680);
		do Memory.poke(memAddress +1214, -2048);
		do Memory.poke(memAddress +1246, -2048);
		do Memory.poke(memAddress +1278, -8192);
		do Memory.poke(memAddress +1310, -8192);
		do Memory.poke(memAddress +1406, -128);
		do Memory.poke(memAddress +1438, -128);
		do Memory.poke(memAddress +1470, -128);
		do Memory.poke(memAddress +1502, -128);
		// column -1
		do Memory.poke(memAddress -1, 120);
		do Memory.poke(memAddress +31, 120);
		do Memory.poke(memAddress +63, 390);
		do Memory.poke(memAddress +95, 390);
		do Memory.poke(memAddress +127, 390);
		do Memory.poke(memAddress +159, 390);
		do Memory.poke(memAddress +191, 1537);
		do Memory.poke(memAddress +223, 1537);
		do Memory.poke(memAddress +255, 1537);
		do Memory.poke(memAddress +287, 1537);
		do Memory.poke(memAddress +319, 1927);
		do Memory.poke(memAddress +351, 1927);
		do Memory.poke(memAddress +383, 6654);
		do Memory.poke(memAddress +415, 6654);
		do Memory.poke(memAddress +447, 6264);
		do Memory.poke(memAddress +479, 6264);
		do Memory.poke(memAddress +511, 6144);
		do Memory.poke(memAddress +543, 6144);
		do Memory.poke(memAddress +575, 7681);
		do Memory.poke(memAddress +607, 7681);
		do Memory.poke(memAddress +639, 26623);
		do Memory.poke(memAddress +671, 26623);
		do Memory.poke(memAddress +703, 25086);
		do Memory.poke(memAddress +735, 25086);
		do Memory.poke(memAddress +767, 24576);
		do Memory.poke(memAddress +799, 24576);
		do Memory.poke(memAddress +831, -2048);
		do Memory.poke(memAddress +863, -2048);
		do Memory.poke(memAddress +895, -25087);
		do Memory.poke(memAddress +927, -25087);
		do Memory.poke(memAddress +959, -24577);
		do Memory.poke(memAddress +991, -24577);
		do Memory.poke(memAddress +1023, -30721);
		do Memory.poke(memAddress +1055, -30721);
		do Memory.poke(memAddress +1087, ~32767);
		do Memory.poke(memAddress +1119, ~32767);
		do Memory.poke(memAddress +1151, -8192);
		do Memory.poke(memAddress +1183, -8192);
		do Memory.poke(memAddress +1215, 32767);
		do Memory.poke(memAddress +1247, 32767);
		do Memory.poke(memAddress +1279, 8191);
		do Memory.poke(memAddress +1311, 8191);
		do Memory.poke(memAddress +1407, -1);
		do Memory.poke(memAddress +1439, -1);
		do Memory.poke(memAddress +1471, -1);
		do Memory.poke(memAddress +1503, -1);
		return;
	}

	function void cono3(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +896, 1);
		do Memory.poke(memAddress +928, 1);
		do Memory.poke(memAddress +960, 1);
		do Memory.poke(memAddress +992, 1);
		do Memory.poke(memAddress +1024, 1);
		do Memory.poke(memAddress +1056, 1);
		do Memory.poke(memAddress +1088, 6);
		do Memory.poke(memAddress +1120, 6);
		do Memory.poke(memAddress +1152, 6);
		do Memory.poke(memAddress +1184, 6);
		do Memory.poke(memAddress +1216, 6);
		do Memory.poke(memAddress +1248, 6);
		do Memory.poke(memAddress +1280, 6);
		do Memory.poke(memAddress +1312, 6);
		do Memory.poke(memAddress +1344, 7);
		do Memory.poke(memAddress +1376, 7);
		do Memory.poke(memAddress +1408, 1);
		do Memory.poke(memAddress +1440, 1);
		// column 1
		// column -2
		do Memory.poke(memAddress -2, ~32767);
		do Memory.poke(memAddress +30, ~32767);
		do Memory.poke(memAddress +62, 24576);
		do Memory.poke(memAddress +94, 24576);
		do Memory.poke(memAddress +126, 24576);
		do Memory.poke(memAddress +158, 24576);
		do Memory.poke(memAddress +190, 6144);
		do Memory.poke(memAddress +222, 6144);
		do Memory.poke(memAddress +254, 6144);
		do Memory.poke(memAddress +286, 6144);
		do Memory.poke(memAddress +318, 30720);
		do Memory.poke(memAddress +350, 30720);
		do Memory.poke(memAddress +382, -6656);
		do Memory.poke(memAddress +414, -6656);
		do Memory.poke(memAddress +446, -31232);
		do Memory.poke(memAddress +478, -31232);
		do Memory.poke(memAddress +510, 1536);
		do Memory.poke(memAddress +542, 1536);
		do Memory.poke(memAddress +574, 7680);
		do Memory.poke(memAddress +606, 7680);
		do Memory.poke(memAddress +638, -1664);
		do Memory.poke(memAddress +670, -1664);
		do Memory.poke(memAddress +702, -7808);
		do Memory.poke(memAddress +734, -7808);
		do Memory.poke(memAddress +766, 384);
		do Memory.poke(memAddress +798, 384);
		do Memory.poke(memAddress +830, 2016);
		do Memory.poke(memAddress +862, 2016);
		do Memory.poke(memAddress +894, 7776);
		do Memory.poke(memAddress +926, 7776);
		do Memory.poke(memAddress +958, -416);
		do Memory.poke(memAddress +990, -416);
		do Memory.poke(memAddress +1022, -1952);
		do Memory.poke(memAddress +1054, -1952);
		do Memory.poke(memAddress +1086, 96);
		do Memory.poke(memAddress +1118, 96);
		do Memory.poke(memAddress +1150, 480);
		do Memory.poke(memAddress +1182, 480);
		do Memory.poke(memAddress +1214, -128);
		do Memory.poke(memAddress +1246, -128);
		do Memory.poke(memAddress +1278, -512);
		do Memory.poke(memAddress +1310, -512);
		do Memory.poke(memAddress +1406, -32);
		do Memory.poke(memAddress +1438, -32);
		do Memory.poke(memAddress +1470, -32);
		do Memory.poke(memAddress +1502, -32);
		// column -1
		do Memory.poke(memAddress -1, 7);
		do Memory.poke(memAddress +31, 7);
		do Memory.poke(memAddress +63, 24);
		do Memory.poke(memAddress +95, 24);
		do Memory.poke(memAddress +127, 24);
		do Memory.poke(memAddress +159, 24);
		do Memory.poke(memAddress +191, 96);
		do Memory.poke(memAddress +223, 96);
		do Memory.poke(memAddress +255, 96);
		do Memory.poke(memAddress +287, 96);
		do Memory.poke(memAddress +319, 120);
		do Memory.poke(memAddress +351, 120);
		do Memory.poke(memAddress +383, 415);
		do Memory.poke(memAddress +415, 415);
		do Memory.poke(memAddress +447, 391);
		do Memory.poke(memAddress +479, 391);
		do Memory.poke(memAddress +511, 384);
		do Memory.poke(memAddress +543, 384);
		do Memory.poke(memAddress +575, 480);
		do Memory.poke(memAddress +607, 480);
		do Memory.poke(memAddress +639, 1663);
		do Memory.poke(memAddress +671, 1663);
		do Memory.poke(memAddress +703, 1567);
		do Memory.poke(memAddress +735, 1567);
		do Memory.poke(memAddress +767, 1536);
		do Memory.poke(memAddress +799, 1536);
		do Memory.poke(memAddress +831, 32640);
		do Memory.poke(memAddress +863, 32640);
		do Memory.poke(memAddress +895, -26144);
		do Memory.poke(memAddress +927, -26144);
		do Memory.poke(memAddress +959, -26113);
		do Memory.poke(memAddress +991, -26113);
		do Memory.poke(memAddress +1023, -26497);
		do Memory.poke(memAddress +1055, -26497);
		do Memory.poke(memAddress +1087, 6144);
		do Memory.poke(memAddress +1119, 6144);
		do Memory.poke(memAddress +1151, 7680);
		do Memory.poke(memAddress +1183, 7680);
		do Memory.poke(memAddress +1215, 2047);
		do Memory.poke(memAddress +1247, 2047);
		do Memory.poke(memAddress +1279, 511);
		do Memory.poke(memAddress +1311, 511);
		do Memory.poke(memAddress +1343, ~32767);
		do Memory.poke(memAddress +1375, ~32767);
		do Memory.poke(memAddress +1407, -1);
		do Memory.poke(memAddress +1439, -1);
		do Memory.poke(memAddress +1471, 16383);
		do Memory.poke(memAddress +1503, 16383);
		return;
	}

	function void cono4(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -2, 30720);
		do Memory.poke(memAddress +30, 30720);
		do Memory.poke(memAddress +62, -31232);
		do Memory.poke(memAddress +94, -31232);
		do Memory.poke(memAddress +126, -31232);
		do Memory.poke(memAddress +158, -31232);
		do Memory.poke(memAddress +190, 384);
		do Memory.poke(memAddress +222, 384);
		do Memory.poke(memAddress +254, 384);
		do Memory.poke(memAddress +286, 384);
		do Memory.poke(memAddress +318, -30848);
		do Memory.poke(memAddress +350, -30848);
		do Memory.poke(memAddress +382, -416);
		do Memory.poke(memAddress +414, -416);
		do Memory.poke(memAddress +446, 30816);
		do Memory.poke(memAddress +478, 30816);
		do Memory.poke(memAddress +510, 96);
		do Memory.poke(memAddress +542, 96);
		do Memory.poke(memAddress +574, 480);
		do Memory.poke(memAddress +606, 480);
		do Memory.poke(memAddress +638, -104);
		do Memory.poke(memAddress +670, -104);
		do Memory.poke(memAddress +702, -488);
		do Memory.poke(memAddress +734, -488);
		do Memory.poke(memAddress +766, 24);
		do Memory.poke(memAddress +798, 24);
		do Memory.poke(memAddress +830, 120);
		do Memory.poke(memAddress +862, 120);
		do Memory.poke(memAddress +894, 480);
		do Memory.poke(memAddress +926, 480);
		do Memory.poke(memAddress +958, -32);
		do Memory.poke(memAddress +990, -32);
		do Memory.poke(memAddress +1022, -128);
		do Memory.poke(memAddress +1054, -128);
		do Memory.poke(memAddress +1150, 24);
		do Memory.poke(memAddress +1182, 24);
		do Memory.poke(memAddress +1214, -8);
		do Memory.poke(memAddress +1246, -8);
		do Memory.poke(memAddress +1278, -32);
		do Memory.poke(memAddress +1310, -32);
		do Memory.poke(memAddress +1406, -8);
		do Memory.poke(memAddress +1438, -8);
		do Memory.poke(memAddress +1470, -8);
		do Memory.poke(memAddress +1502, -8);
		// column -1
		do Memory.poke(memAddress +63, 1);
		do Memory.poke(memAddress +95, 1);
		do Memory.poke(memAddress +127, 1);
		do Memory.poke(memAddress +159, 1);
		do Memory.poke(memAddress +191, 6);
		do Memory.poke(memAddress +223, 6);
		do Memory.poke(memAddress +255, 6);
		do Memory.poke(memAddress +287, 6);
		do Memory.poke(memAddress +319, 7);
		do Memory.poke(memAddress +351, 7);
		do Memory.poke(memAddress +383, 25);
		do Memory.poke(memAddress +415, 25);
		do Memory.poke(memAddress +447, 24);
		do Memory.poke(memAddress +479, 24);
		do Memory.poke(memAddress +511, 24);
		do Memory.poke(memAddress +543, 24);
		do Memory.poke(memAddress +575, 30);
		do Memory.poke(memAddress +607, 30);
		do Memory.poke(memAddress +639, 103);
		do Memory.poke(memAddress +671, 103);
		do Memory.poke(memAddress +703, 97);
		do Memory.poke(memAddress +735, 97);
		do Memory.poke(memAddress +767, 96);
		do Memory.poke(memAddress +799, 96);
		do Memory.poke(memAddress +831, 2040);
		do Memory.poke(memAddress +863, 2040);
		do Memory.poke(memAddress +895, 6558);
		do Memory.poke(memAddress +927, 6558);
		do Memory.poke(memAddress +959, 6559);
		do Memory.poke(memAddress +991, 6559);
		do Memory.poke(memAddress +1023, 6535);
		do Memory.poke(memAddress +1055, 6535);
		do Memory.poke(memAddress +1087, 24960);
		do Memory.poke(memAddress +1119, 24960);
		do Memory.poke(memAddress +1151, 25056);
		do Memory.poke(memAddress +1183, 25056);
		do Memory.poke(memAddress +1215, 24703);
		do Memory.poke(memAddress +1247, 24703);
		do Memory.poke(memAddress +1279, 24607);
		do Memory.poke(memAddress +1311, 24607);
		do Memory.poke(memAddress +1343, 30720);
		do Memory.poke(memAddress +1375, 30720);
		do Memory.poke(memAddress +1407, 8191);
		do Memory.poke(memAddress +1439, 8191);
		do Memory.poke(memAddress +1471, 1023);
		do Memory.poke(memAddress +1503, 1023);
		return;
	}

	function void cono5(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -2, 1920);
		do Memory.poke(memAddress +30, 1920);
		do Memory.poke(memAddress +62, 6240);
		do Memory.poke(memAddress +94, 6240);
		do Memory.poke(memAddress +126, 6240);
		do Memory.poke(memAddress +158, 6240);
		do Memory.poke(memAddress +190, 24600);
		do Memory.poke(memAddress +222, 24600);
		do Memory.poke(memAddress +254, 24600);
		do Memory.poke(memAddress +286, 24600);
		do Memory.poke(memAddress +318, 30840);
		do Memory.poke(memAddress +350, 30840);
		do Memory.poke(memAddress +382, -24602);
		do Memory.poke(memAddress +414, -24602);
		do Memory.poke(memAddress +446, -30842);
		do Memory.poke(memAddress +478, -30842);
		do Memory.poke(memAddress +510, -32762);
		do Memory.poke(memAddress +542, -32762);
		do Memory.poke(memAddress +574, -8162);
		do Memory.poke(memAddress +606, -8162);
		do Memory.poke(memAddress +638, 32760);
		do Memory.poke(memAddress +670, 32760);
		do Memory.poke(memAddress +702, 8160);
		do Memory.poke(memAddress +734, 8160);
		do Memory.poke(memAddress +830, -32762);
		do Memory.poke(memAddress +862, -32762);
		do Memory.poke(memAddress +894, -8162);
		do Memory.poke(memAddress +926, -8162);
		do Memory.poke(memAddress +958, -2);
		do Memory.poke(memAddress +990, -2);
		do Memory.poke(memAddress +1022, 32760);
		do Memory.poke(memAddress +1054, 32760);
		do Memory.poke(memAddress +1214, -2);
		do Memory.poke(memAddress +1246, -2);
		do Memory.poke(memAddress +1278, -2);
		do Memory.poke(memAddress +1310, -2);
		do Memory.poke(memAddress +1406, -2);
		do Memory.poke(memAddress +1438, -2);
		do Memory.poke(memAddress +1470, -2);
		do Memory.poke(memAddress +1502, -2);
		// column -1
		do Memory.poke(memAddress +383, 1);
		do Memory.poke(memAddress +415, 1);
		do Memory.poke(memAddress +447, 1);
		do Memory.poke(memAddress +479, 1);
		do Memory.poke(memAddress +511, 1);
		do Memory.poke(memAddress +543, 1);
		do Memory.poke(memAddress +575, 1);
		do Memory.poke(memAddress +607, 1);
		do Memory.poke(memAddress +639, 6);
		do Memory.poke(memAddress +671, 6);
		do Memory.poke(memAddress +703, 6);
		do Memory.poke(memAddress +735, 6);
		do Memory.poke(memAddress +767, 6);
		do Memory.poke(memAddress +799, 6);
		do Memory.poke(memAddress +831, 127);
		do Memory.poke(memAddress +863, 127);
		do Memory.poke(memAddress +895, 409);
		do Memory.poke(memAddress +927, 409);
		do Memory.poke(memAddress +959, 409);
		do Memory.poke(memAddress +991, 409);
		do Memory.poke(memAddress +1023, 408);
		do Memory.poke(memAddress +1055, 408);
		do Memory.poke(memAddress +1087, 1560);
		do Memory.poke(memAddress +1119, 1560);
		do Memory.poke(memAddress +1151, 1566);
		do Memory.poke(memAddress +1183, 1566);
		do Memory.poke(memAddress +1215, 1543);
		do Memory.poke(memAddress +1247, 1543);
		do Memory.poke(memAddress +1279, 1537);
		do Memory.poke(memAddress +1311, 1537);
		do Memory.poke(memAddress +1343, 1920);
		do Memory.poke(memAddress +1375, 1920);
		do Memory.poke(memAddress +1407, 511);
		do Memory.poke(memAddress +1439, 511);
		do Memory.poke(memAddress +1471, 63);
		do Memory.poke(memAddress +1503, 63);
		return;
	}

	function void cono6(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +189, ~32767);
		do Memory.poke(memAddress +221, ~32767);
		do Memory.poke(memAddress +253, ~32767);
		do Memory.poke(memAddress +285, ~32767);
		do Memory.poke(memAddress +317, ~32767);
		do Memory.poke(memAddress +349, ~32767);
		do Memory.poke(memAddress +573, ~32767);
		do Memory.poke(memAddress +605, ~32767);
		do Memory.poke(memAddress +637, ~32767);
		do Memory.poke(memAddress +669, ~32767);
		do Memory.poke(memAddress +893, ~32767);
		do Memory.poke(memAddress +925, ~32767);
		do Memory.poke(memAddress +957, ~32767);
		do Memory.poke(memAddress +989, ~32767);
		do Memory.poke(memAddress +1021, ~32767);
		do Memory.poke(memAddress +1053, ~32767);
		do Memory.poke(memAddress +1213, ~32767);
		do Memory.poke(memAddress +1245, ~32767);
		do Memory.poke(memAddress +1277, ~32767);
		do Memory.poke(memAddress +1309, ~32767);
		do Memory.poke(memAddress +1405, ~32767);
		do Memory.poke(memAddress +1437, ~32767);
		do Memory.poke(memAddress +1469, ~32767);
		do Memory.poke(memAddress +1501, ~32767);
		// column -2
		do Memory.poke(memAddress -2, 120);
		do Memory.poke(memAddress +30, 120);
		do Memory.poke(memAddress +62, 390);
		do Memory.poke(memAddress +94, 390);
		do Memory.poke(memAddress +126, 390);
		do Memory.poke(memAddress +158, 390);
		do Memory.poke(memAddress +190, 1537);
		do Memory.poke(memAddress +222, 1537);
		do Memory.poke(memAddress +254, 1537);
		do Memory.poke(memAddress +286, 1537);
		do Memory.poke(memAddress +318, 1927);
		do Memory.poke(memAddress +350, 1927);
		do Memory.poke(memAddress +382, 6654);
		do Memory.poke(memAddress +414, 6654);
		do Memory.poke(memAddress +446, 6264);
		do Memory.poke(memAddress +478, 6264);
		do Memory.poke(memAddress +510, 6144);
		do Memory.poke(memAddress +542, 6144);
		do Memory.poke(memAddress +574, 7681);
		do Memory.poke(memAddress +606, 7681);
		do Memory.poke(memAddress +638, 26623);
		do Memory.poke(memAddress +670, 26623);
		do Memory.poke(memAddress +702, 25086);
		do Memory.poke(memAddress +734, 25086);
		do Memory.poke(memAddress +766, 24576);
		do Memory.poke(memAddress +798, 24576);
		do Memory.poke(memAddress +830, -2048);
		do Memory.poke(memAddress +862, -2048);
		do Memory.poke(memAddress +894, -25087);
		do Memory.poke(memAddress +926, -25087);
		do Memory.poke(memAddress +958, -24577);
		do Memory.poke(memAddress +990, -24577);
		do Memory.poke(memAddress +1022, -30721);
		do Memory.poke(memAddress +1054, -30721);
		do Memory.poke(memAddress +1086, ~32767);
		do Memory.poke(memAddress +1118, ~32767);
		do Memory.poke(memAddress +1150, -8192);
		do Memory.poke(memAddress +1182, -8192);
		do Memory.poke(memAddress +1214, 32767);
		do Memory.poke(memAddress +1246, 32767);
		do Memory.poke(memAddress +1278, 8191);
		do Memory.poke(memAddress +1310, 8191);
		do Memory.poke(memAddress +1406, -1);
		do Memory.poke(memAddress +1438, -1);
		do Memory.poke(memAddress +1470, -1);
		do Memory.poke(memAddress +1502, -1);
		// column -1
		do Memory.poke(memAddress +831, 7);
		do Memory.poke(memAddress +863, 7);
		do Memory.poke(memAddress +895, 25);
		do Memory.poke(memAddress +927, 25);
		do Memory.poke(memAddress +959, 25);
		do Memory.poke(memAddress +991, 25);
		do Memory.poke(memAddress +1023, 25);
		do Memory.poke(memAddress +1055, 25);
		do Memory.poke(memAddress +1087, 97);
		do Memory.poke(memAddress +1119, 97);
		do Memory.poke(memAddress +1151, 97);
		do Memory.poke(memAddress +1183, 97);
		do Memory.poke(memAddress +1215, 96);
		do Memory.poke(memAddress +1247, 96);
		do Memory.poke(memAddress +1279, 96);
		do Memory.poke(memAddress +1311, 96);
		do Memory.poke(memAddress +1343, 120);
		do Memory.poke(memAddress +1375, 120);
		do Memory.poke(memAddress +1407, 31);
		do Memory.poke(memAddress +1439, 31);
		do Memory.poke(memAddress +1471, 3);
		do Memory.poke(memAddress +1503, 3);
		return;
	}

	function void cono7(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, ~32767);
		do Memory.poke(memAddress +29, ~32767);
		do Memory.poke(memAddress +61, 24576);
		do Memory.poke(memAddress +93, 24576);
		do Memory.poke(memAddress +125, 24576);
		do Memory.poke(memAddress +157, 24576);
		do Memory.poke(memAddress +317, 24576);
		do Memory.poke(memAddress +349, 24576);
		do Memory.poke(memAddress +381, -8192);
		do Memory.poke(memAddress +413, -8192);
		do Memory.poke(memAddress +445, ~32767);
		do Memory.poke(memAddress +477, ~32767);
		do Memory.poke(memAddress +637, -8192);
		do Memory.poke(memAddress +669, -8192);
		do Memory.poke(memAddress +701, -8192);
		do Memory.poke(memAddress +733, -8192);
		do Memory.poke(memAddress +957, -8192);
		do Memory.poke(memAddress +989, -8192);
		do Memory.poke(memAddress +1021, -8192);
		do Memory.poke(memAddress +1053, -8192);
		do Memory.poke(memAddress +1213, -8192);
		do Memory.poke(memAddress +1245, -8192);
		do Memory.poke(memAddress +1277, -8192);
		do Memory.poke(memAddress +1309, -8192);
		do Memory.poke(memAddress +1405, -8192);
		do Memory.poke(memAddress +1437, -8192);
		do Memory.poke(memAddress +1469, -8192);
		do Memory.poke(memAddress +1501, -8192);
		// column -2
		do Memory.poke(memAddress -2, 7);
		do Memory.poke(memAddress +30, 7);
		do Memory.poke(memAddress +62, 24);
		do Memory.poke(memAddress +94, 24);
		do Memory.poke(memAddress +126, 24);
		do Memory.poke(memAddress +158, 24);
		do Memory.poke(memAddress +190, 96);
		do Memory.poke(memAddress +222, 96);
		do Memory.poke(memAddress +254, 96);
		do Memory.poke(memAddress +286, 96);
		do Memory.poke(memAddress +318, 120);
		do Memory.poke(memAddress +350, 120);
		do Memory.poke(memAddress +382, 415);
		do Memory.poke(memAddress +414, 415);
		do Memory.poke(memAddress +446, 391);
		do Memory.poke(memAddress +478, 391);
		do Memory.poke(memAddress +510, 384);
		do Memory.poke(memAddress +542, 384);
		do Memory.poke(memAddress +574, 480);
		do Memory.poke(memAddress +606, 480);
		do Memory.poke(memAddress +638, 1663);
		do Memory.poke(memAddress +670, 1663);
		do Memory.poke(memAddress +702, 1567);
		do Memory.poke(memAddress +734, 1567);
		do Memory.poke(memAddress +766, 1536);
		do Memory.poke(memAddress +798, 1536);
		do Memory.poke(memAddress +830, 32640);
		do Memory.poke(memAddress +862, 32640);
		do Memory.poke(memAddress +894, -26144);
		do Memory.poke(memAddress +926, -26144);
		do Memory.poke(memAddress +958, -26113);
		do Memory.poke(memAddress +990, -26113);
		do Memory.poke(memAddress +1022, -26497);
		do Memory.poke(memAddress +1054, -26497);
		do Memory.poke(memAddress +1086, 6144);
		do Memory.poke(memAddress +1118, 6144);
		do Memory.poke(memAddress +1150, 7680);
		do Memory.poke(memAddress +1182, 7680);
		do Memory.poke(memAddress +1214, 2047);
		do Memory.poke(memAddress +1246, 2047);
		do Memory.poke(memAddress +1278, 511);
		do Memory.poke(memAddress +1310, 511);
		do Memory.poke(memAddress +1342, ~32767);
		do Memory.poke(memAddress +1374, ~32767);
		do Memory.poke(memAddress +1406, -1);
		do Memory.poke(memAddress +1438, -1);
		do Memory.poke(memAddress +1470, 16383);
		do Memory.poke(memAddress +1502, 16383);
		// column -1
		do Memory.poke(memAddress +895, 1);
		do Memory.poke(memAddress +927, 1);
		do Memory.poke(memAddress +959, 1);
		do Memory.poke(memAddress +991, 1);
		do Memory.poke(memAddress +1023, 1);
		do Memory.poke(memAddress +1055, 1);
		do Memory.poke(memAddress +1087, 6);
		do Memory.poke(memAddress +1119, 6);
		do Memory.poke(memAddress +1151, 6);
		do Memory.poke(memAddress +1183, 6);
		do Memory.poke(memAddress +1215, 6);
		do Memory.poke(memAddress +1247, 6);
		do Memory.poke(memAddress +1279, 6);
		do Memory.poke(memAddress +1311, 6);
		do Memory.poke(memAddress +1343, 7);
		do Memory.poke(memAddress +1375, 7);
		do Memory.poke(memAddress +1407, 1);
		do Memory.poke(memAddress +1439, 1);
		return;
	}

	function void cono8(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 30720);
		do Memory.poke(memAddress +29, 30720);
		do Memory.poke(memAddress +61, ~32767);
		do Memory.poke(memAddress +93, ~32767);
		do Memory.poke(memAddress +125, ~32767);
		do Memory.poke(memAddress +157, ~32767);
		do Memory.poke(memAddress +317, ~32767);
		do Memory.poke(memAddress +349, ~32767);
		do Memory.poke(memAddress +381, -2048);
		do Memory.poke(memAddress +413, -2048);
		do Memory.poke(memAddress +445, 30720);
		do Memory.poke(memAddress +477, 30720);
		do Memory.poke(memAddress +637, -2048);
		do Memory.poke(memAddress +669, -2048);
		do Memory.poke(memAddress +701, -2048);
		do Memory.poke(memAddress +733, -2048);
		do Memory.poke(memAddress +957, -2048);
		do Memory.poke(memAddress +989, -2048);
		do Memory.poke(memAddress +1021, -2048);
		do Memory.poke(memAddress +1053, -2048);
		do Memory.poke(memAddress +1213, -2048);
		do Memory.poke(memAddress +1245, -2048);
		do Memory.poke(memAddress +1277, -2048);
		do Memory.poke(memAddress +1309, -2048);
		do Memory.poke(memAddress +1405, -2048);
		do Memory.poke(memAddress +1437, -2048);
		do Memory.poke(memAddress +1469, -2048);
		do Memory.poke(memAddress +1501, -2048);
		// column -2
		do Memory.poke(memAddress +62, 1);
		do Memory.poke(memAddress +94, 1);
		do Memory.poke(memAddress +126, 1);
		do Memory.poke(memAddress +158, 1);
		do Memory.poke(memAddress +190, 6);
		do Memory.poke(memAddress +222, 6);
		do Memory.poke(memAddress +254, 6);
		do Memory.poke(memAddress +286, 6);
		do Memory.poke(memAddress +318, 7);
		do Memory.poke(memAddress +350, 7);
		do Memory.poke(memAddress +382, 25);
		do Memory.poke(memAddress +414, 25);
		do Memory.poke(memAddress +446, 24);
		do Memory.poke(memAddress +478, 24);
		do Memory.poke(memAddress +510, 24);
		do Memory.poke(memAddress +542, 24);
		do Memory.poke(memAddress +574, 30);
		do Memory.poke(memAddress +606, 30);
		do Memory.poke(memAddress +638, 103);
		do Memory.poke(memAddress +670, 103);
		do Memory.poke(memAddress +702, 97);
		do Memory.poke(memAddress +734, 97);
		do Memory.poke(memAddress +766, 96);
		do Memory.poke(memAddress +798, 96);
		do Memory.poke(memAddress +830, 2040);
		do Memory.poke(memAddress +862, 2040);
		do Memory.poke(memAddress +894, 6558);
		do Memory.poke(memAddress +926, 6558);
		do Memory.poke(memAddress +958, 6559);
		do Memory.poke(memAddress +990, 6559);
		do Memory.poke(memAddress +1022, 6535);
		do Memory.poke(memAddress +1054, 6535);
		do Memory.poke(memAddress +1086, 24960);
		do Memory.poke(memAddress +1118, 24960);
		do Memory.poke(memAddress +1150, 25056);
		do Memory.poke(memAddress +1182, 25056);
		do Memory.poke(memAddress +1214, 24703);
		do Memory.poke(memAddress +1246, 24703);
		do Memory.poke(memAddress +1278, 24607);
		do Memory.poke(memAddress +1310, 24607);
		do Memory.poke(memAddress +1342, 30720);
		do Memory.poke(memAddress +1374, 30720);
		do Memory.poke(memAddress +1406, 8191);
		do Memory.poke(memAddress +1438, 8191);
		do Memory.poke(memAddress +1470, 1023);
		do Memory.poke(memAddress +1502, 1023);
		// column -1
		return;
	}

	function void cono9(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 1536);
		do Memory.poke(memAddress +29, 1536);
		do Memory.poke(memAddress +61, 6144);
		do Memory.poke(memAddress +93, 6144);
		do Memory.poke(memAddress +125, 6144);
		do Memory.poke(memAddress +157, 6144);
		do Memory.poke(memAddress +189, 24576);
		do Memory.poke(memAddress +221, 24576);
		do Memory.poke(memAddress +253, 24576);
		do Memory.poke(memAddress +285, 24576);
		do Memory.poke(memAddress +317, 30720);
		do Memory.poke(memAddress +349, 30720);
		do Memory.poke(memAddress +381, -25088);
		do Memory.poke(memAddress +413, -25088);
		do Memory.poke(memAddress +445, -31232);
		do Memory.poke(memAddress +477, -31232);
		do Memory.poke(memAddress +509, ~32767);
		do Memory.poke(memAddress +541, ~32767);
		do Memory.poke(memAddress +573, -8192);
		do Memory.poke(memAddress +605, -8192);
		do Memory.poke(memAddress +637, 32256);
		do Memory.poke(memAddress +669, 32256);
		do Memory.poke(memAddress +701, 7680);
		do Memory.poke(memAddress +733, 7680);
		do Memory.poke(memAddress +829, ~32767);
		do Memory.poke(memAddress +861, ~32767);
		do Memory.poke(memAddress +893, -8192);
		do Memory.poke(memAddress +925, -8192);
		do Memory.poke(memAddress +957, -512);
		do Memory.poke(memAddress +989, -512);
		do Memory.poke(memAddress +1021, 32256);
		do Memory.poke(memAddress +1053, 32256);
		do Memory.poke(memAddress +1213, -512);
		do Memory.poke(memAddress +1245, -512);
		do Memory.poke(memAddress +1277, -512);
		do Memory.poke(memAddress +1309, -512);
		do Memory.poke(memAddress +1405, -512);
		do Memory.poke(memAddress +1437, -512);
		do Memory.poke(memAddress +1469, -512);
		do Memory.poke(memAddress +1501, -512);
		// column -2
		do Memory.poke(memAddress +382, 1);
		do Memory.poke(memAddress +414, 1);
		do Memory.poke(memAddress +446, 1);
		do Memory.poke(memAddress +478, 1);
		do Memory.poke(memAddress +510, 1);
		do Memory.poke(memAddress +542, 1);
		do Memory.poke(memAddress +574, 1);
		do Memory.poke(memAddress +606, 1);
		do Memory.poke(memAddress +638, 6);
		do Memory.poke(memAddress +670, 6);
		do Memory.poke(memAddress +702, 6);
		do Memory.poke(memAddress +734, 6);
		do Memory.poke(memAddress +766, 6);
		do Memory.poke(memAddress +798, 6);
		do Memory.poke(memAddress +830, 127);
		do Memory.poke(memAddress +862, 127);
		do Memory.poke(memAddress +894, 409);
		do Memory.poke(memAddress +926, 409);
		do Memory.poke(memAddress +958, 409);
		do Memory.poke(memAddress +990, 409);
		do Memory.poke(memAddress +1022, 408);
		do Memory.poke(memAddress +1054, 408);
		do Memory.poke(memAddress +1086, 1560);
		do Memory.poke(memAddress +1118, 1560);
		do Memory.poke(memAddress +1150, 1566);
		do Memory.poke(memAddress +1182, 1566);
		do Memory.poke(memAddress +1214, 1543);
		do Memory.poke(memAddress +1246, 1543);
		do Memory.poke(memAddress +1278, 1537);
		do Memory.poke(memAddress +1310, 1537);
		do Memory.poke(memAddress +1342, 1920);
		do Memory.poke(memAddress +1374, 1920);
		do Memory.poke(memAddress +1406, 511);
		do Memory.poke(memAddress +1438, 511);
		do Memory.poke(memAddress +1470, 63);
		do Memory.poke(memAddress +1502, 63);
		return;
	}

	function void cono10(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 384);
		do Memory.poke(memAddress +29, 384);
		do Memory.poke(memAddress +61, 384);
		do Memory.poke(memAddress +93, 384);
		do Memory.poke(memAddress +125, 1536);
		do Memory.poke(memAddress +157, 1536);
		do Memory.poke(memAddress +189, 1536);
		do Memory.poke(memAddress +221, 1536);
		do Memory.poke(memAddress +253, 1920);
		do Memory.poke(memAddress +285, 1920);
		do Memory.poke(memAddress +317, 6528);
		do Memory.poke(memAddress +349, 6528);
		do Memory.poke(memAddress +381, 6144);
		do Memory.poke(memAddress +413, 6144);
		do Memory.poke(memAddress +445, 6144);
		do Memory.poke(memAddress +477, 6144);
		do Memory.poke(memAddress +509, 7680);
		do Memory.poke(memAddress +541, 7680);
		do Memory.poke(memAddress +573, 26496);
		do Memory.poke(memAddress +605, 26496);
		do Memory.poke(memAddress +637, 24960);
		do Memory.poke(memAddress +669, 24960);
		do Memory.poke(memAddress +701, 24576);
		do Memory.poke(memAddress +733, 24576);
		do Memory.poke(memAddress +765, -2048);
		do Memory.poke(memAddress +797, -2048);
		do Memory.poke(memAddress +829, -25088);
		do Memory.poke(memAddress +861, -25088);
		do Memory.poke(memAddress +893, -24704);
		do Memory.poke(memAddress +925, -24704);
		do Memory.poke(memAddress +957, -30848);
		do Memory.poke(memAddress +989, -30848);
		do Memory.poke(memAddress +1021, ~32767);
		do Memory.poke(memAddress +1053, ~32767);
		do Memory.poke(memAddress +1085, -8192);
		do Memory.poke(memAddress +1117, -8192);
		do Memory.poke(memAddress +1149, 32640);
		do Memory.poke(memAddress +1181, 32640);
		do Memory.poke(memAddress +1213, 8064);
		do Memory.poke(memAddress +1245, 8064);
		do Memory.poke(memAddress +1341, -128);
		do Memory.poke(memAddress +1373, -128);
		do Memory.poke(memAddress +1405, -128);
		do Memory.poke(memAddress +1437, -128);
		// column -2
		do Memory.poke(memAddress +766, 7);
		do Memory.poke(memAddress +798, 7);
		do Memory.poke(memAddress +830, 25);
		do Memory.poke(memAddress +862, 25);
		do Memory.poke(memAddress +894, 25);
		do Memory.poke(memAddress +926, 25);
		do Memory.poke(memAddress +958, 25);
		do Memory.poke(memAddress +990, 25);
		do Memory.poke(memAddress +1022, 97);
		do Memory.poke(memAddress +1054, 97);
		do Memory.poke(memAddress +1086, 97);
		do Memory.poke(memAddress +1118, 97);
		do Memory.poke(memAddress +1150, 96);
		do Memory.poke(memAddress +1182, 96);
		do Memory.poke(memAddress +1214, 96);
		do Memory.poke(memAddress +1246, 96);
		do Memory.poke(memAddress +1278, 120);
		do Memory.poke(memAddress +1310, 120);
		do Memory.poke(memAddress +1342, 31);
		do Memory.poke(memAddress +1374, 31);
		do Memory.poke(memAddress +1406, 3);
		do Memory.poke(memAddress +1438, 3);
		// column -1
		return;
	}

	function void cono11(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 96);
		do Memory.poke(memAddress +29, 96);
		do Memory.poke(memAddress +61, 96);
		do Memory.poke(memAddress +93, 96);
		do Memory.poke(memAddress +125, 96);
		do Memory.poke(memAddress +157, 96);
		do Memory.poke(memAddress +189, 384);
		do Memory.poke(memAddress +221, 384);
		do Memory.poke(memAddress +253, 384);
		do Memory.poke(memAddress +285, 384);
		do Memory.poke(memAddress +317, 384);
		do Memory.poke(memAddress +349, 384);
		do Memory.poke(memAddress +381, 480);
		do Memory.poke(memAddress +413, 480);
		do Memory.poke(memAddress +445, 1632);
		do Memory.poke(memAddress +477, 1632);
		do Memory.poke(memAddress +509, 1536);
		do Memory.poke(memAddress +541, 1536);
		do Memory.poke(memAddress +573, 1536);
		do Memory.poke(memAddress +605, 1536);
		do Memory.poke(memAddress +637, 32640);
		do Memory.poke(memAddress +669, 32640);
		do Memory.poke(memAddress +701, -26144);
		do Memory.poke(memAddress +733, -26144);
		do Memory.poke(memAddress +765, -26144);
		do Memory.poke(memAddress +797, -26144);
		do Memory.poke(memAddress +829, -26528);
		do Memory.poke(memAddress +861, -26528);
		do Memory.poke(memAddress +893, 6144);
		do Memory.poke(memAddress +925, 6144);
		do Memory.poke(memAddress +957, 7680);
		do Memory.poke(memAddress +989, 7680);
		do Memory.poke(memAddress +1021, 2016);
		do Memory.poke(memAddress +1053, 2016);
		do Memory.poke(memAddress +1085, 480);
		do Memory.poke(memAddress +1117, 480);
		do Memory.poke(memAddress +1149, ~32767);
		do Memory.poke(memAddress +1181, ~32767);
		do Memory.poke(memAddress +1213, -32);
		do Memory.poke(memAddress +1245, -32);
		do Memory.poke(memAddress +1277, 16352);
		do Memory.poke(memAddress +1309, 16352);
		// column -2
		do Memory.poke(memAddress +702, 1);
		do Memory.poke(memAddress +734, 1);
		do Memory.poke(memAddress +766, 1);
		do Memory.poke(memAddress +798, 1);
		do Memory.poke(memAddress +830, 1);
		do Memory.poke(memAddress +862, 1);
		do Memory.poke(memAddress +894, 6);
		do Memory.poke(memAddress +926, 6);
		do Memory.poke(memAddress +958, 6);
		do Memory.poke(memAddress +990, 6);
		do Memory.poke(memAddress +1022, 6);
		do Memory.poke(memAddress +1054, 6);
		do Memory.poke(memAddress +1086, 6);
		do Memory.poke(memAddress +1118, 6);
		do Memory.poke(memAddress +1150, 7);
		do Memory.poke(memAddress +1182, 7);
		do Memory.poke(memAddress +1214, 1);
		do Memory.poke(memAddress +1246, 1);
		// column -1
		return;
	}

	function void cono12(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 24);
		do Memory.poke(memAddress +29, 24);
		do Memory.poke(memAddress +61, 24);
		do Memory.poke(memAddress +93, 24);
		do Memory.poke(memAddress +125, 24);
		do Memory.poke(memAddress +157, 24);
		do Memory.poke(memAddress +189, 24);
		do Memory.poke(memAddress +221, 24);
		do Memory.poke(memAddress +253, 96);
		do Memory.poke(memAddress +285, 96);
		do Memory.poke(memAddress +317, 96);
		do Memory.poke(memAddress +349, 96);
		do Memory.poke(memAddress +381, 96);
		do Memory.poke(memAddress +413, 96);
		do Memory.poke(memAddress +445, 2040);
		do Memory.poke(memAddress +477, 2040);
		do Memory.poke(memAddress +509, 6552);
		do Memory.poke(memAddress +541, 6552);
		do Memory.poke(memAddress +573, 6552);
		do Memory.poke(memAddress +605, 6552);
		do Memory.poke(memAddress +637, 6528);
		do Memory.poke(memAddress +669, 6528);
		do Memory.poke(memAddress +701, 24960);
		do Memory.poke(memAddress +733, 24960);
		do Memory.poke(memAddress +765, 25056);
		do Memory.poke(memAddress +797, 25056);
		do Memory.poke(memAddress +829, 24696);
		do Memory.poke(memAddress +861, 24696);
		do Memory.poke(memAddress +893, 24600);
		do Memory.poke(memAddress +925, 24600);
		do Memory.poke(memAddress +957, 30720);
		do Memory.poke(memAddress +989, 30720);
		do Memory.poke(memAddress +1021, 8184);
		do Memory.poke(memAddress +1053, 8184);
		do Memory.poke(memAddress +1085, 1016);
		do Memory.poke(memAddress +1117, 1016);
		// column -2
		// column -1
		return;
	}

	function void cono13(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 6);
		do Memory.poke(memAddress +29, 6);
		do Memory.poke(memAddress +61, 6);
		do Memory.poke(memAddress +93, 6);
		do Memory.poke(memAddress +125, 6);
		do Memory.poke(memAddress +157, 6);
		do Memory.poke(memAddress +189, 126);
		do Memory.poke(memAddress +221, 126);
		do Memory.poke(memAddress +253, 408);
		do Memory.poke(memAddress +285, 408);
		do Memory.poke(memAddress +317, 408);
		do Memory.poke(memAddress +349, 408);
		do Memory.poke(memAddress +381, 408);
		do Memory.poke(memAddress +413, 408);
		do Memory.poke(memAddress +445, 1560);
		do Memory.poke(memAddress +477, 1560);
		do Memory.poke(memAddress +509, 1566);
		do Memory.poke(memAddress +541, 1566);
		do Memory.poke(memAddress +573, 1542);
		do Memory.poke(memAddress +605, 1542);
		do Memory.poke(memAddress +637, 1536);
		do Memory.poke(memAddress +669, 1536);
		do Memory.poke(memAddress +701, 1920);
		do Memory.poke(memAddress +733, 1920);
		do Memory.poke(memAddress +765, 510);
		do Memory.poke(memAddress +797, 510);
		do Memory.poke(memAddress +829, 62);
		do Memory.poke(memAddress +861, 62);
		// column -2
		// column -1
		return;
	}

	function void cono14(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, ~32767);
		do Memory.poke(memAddress +28, ~32767);
		do Memory.poke(memAddress +60, ~32767);
		do Memory.poke(memAddress +92, ~32767);
		do Memory.poke(memAddress +124, ~32767);
		do Memory.poke(memAddress +156, ~32767);
		do Memory.poke(memAddress +188, ~32767);
		do Memory.poke(memAddress +220, ~32767);
		do Memory.poke(memAddress +252, ~32767);
		do Memory.poke(memAddress +284, ~32767);
		do Memory.poke(memAddress +316, ~32767);
		do Memory.poke(memAddress +348, ~32767);
		do Memory.poke(memAddress +572, ~32767);
		do Memory.poke(memAddress +604, ~32767);
		do Memory.poke(memAddress +636, ~32767);
		do Memory.poke(memAddress +668, ~32767);
		// column -3
		do Memory.poke(memAddress -3, 7);
		do Memory.poke(memAddress +29, 7);
		do Memory.poke(memAddress +61, 25);
		do Memory.poke(memAddress +93, 25);
		do Memory.poke(memAddress +125, 25);
		do Memory.poke(memAddress +157, 25);
		do Memory.poke(memAddress +189, 25);
		do Memory.poke(memAddress +221, 25);
		do Memory.poke(memAddress +253, 97);
		do Memory.poke(memAddress +285, 97);
		do Memory.poke(memAddress +317, 97);
		do Memory.poke(memAddress +349, 97);
		do Memory.poke(memAddress +381, 96);
		do Memory.poke(memAddress +413, 96);
		do Memory.poke(memAddress +445, 96);
		do Memory.poke(memAddress +477, 96);
		do Memory.poke(memAddress +509, 120);
		do Memory.poke(memAddress +541, 120);
		do Memory.poke(memAddress +573, 31);
		do Memory.poke(memAddress +605, 31);
		do Memory.poke(memAddress +637, 3);
		do Memory.poke(memAddress +669, 3);
		// column -2
		// column -1
		return;
	}

	function void cono15(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, 24576);
		do Memory.poke(memAddress +28, 24576);
		do Memory.poke(memAddress +60, ~32767);
		do Memory.poke(memAddress +92, ~32767);
		do Memory.poke(memAddress +124, ~32767);
		do Memory.poke(memAddress +156, ~32767);
		do Memory.poke(memAddress +188, ~32767);
		do Memory.poke(memAddress +220, ~32767);
		do Memory.poke(memAddress +508, ~32767);
		do Memory.poke(memAddress +540, ~32767);
		do Memory.poke(memAddress +572, -8192);
		do Memory.poke(memAddress +604, -8192);
		do Memory.poke(memAddress +636, 8192);
		do Memory.poke(memAddress +668, 8192);
		// column -3
		do Memory.poke(memAddress +61, 1);
		do Memory.poke(memAddress +93, 1);
		do Memory.poke(memAddress +125, 1);
		do Memory.poke(memAddress +157, 1);
		do Memory.poke(memAddress +189, 1);
		do Memory.poke(memAddress +221, 1);
		do Memory.poke(memAddress +253, 6);
		do Memory.poke(memAddress +285, 6);
		do Memory.poke(memAddress +317, 6);
		do Memory.poke(memAddress +349, 6);
		do Memory.poke(memAddress +381, 6);
		do Memory.poke(memAddress +413, 6);
		do Memory.poke(memAddress +445, 6);
		do Memory.poke(memAddress +477, 6);
		do Memory.poke(memAddress +509, 7);
		do Memory.poke(memAddress +541, 7);
		do Memory.poke(memAddress +573, 1);
		do Memory.poke(memAddress +605, 1);
		// column -2
		// column -1
		return;
	}

	function void cono16(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, 6144);
		do Memory.poke(memAddress +28, 6144);
		do Memory.poke(memAddress +60, 6144);
		do Memory.poke(memAddress +92, 6144);
		do Memory.poke(memAddress +124, 6144);
		do Memory.poke(memAddress +156, 6144);
		do Memory.poke(memAddress +188, 24576);
		do Memory.poke(memAddress +220, 24576);
		do Memory.poke(memAddress +252, 24576);
		do Memory.poke(memAddress +284, 24576);
		do Memory.poke(memAddress +316, 24576);
		do Memory.poke(memAddress +348, 24576);
		do Memory.poke(memAddress +380, 24576);
		do Memory.poke(memAddress +412, 24576);
		do Memory.poke(memAddress +444, 30720);
		do Memory.poke(memAddress +476, 30720);
		do Memory.poke(memAddress +508, 6144);
		do Memory.poke(memAddress +540, 6144);
		// column -3
		// column -2
		// column -1
		return;
	}

	function void cono17(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, 1536);
		do Memory.poke(memAddress +28, 1536);
		do Memory.poke(memAddress +60, 1536);
		do Memory.poke(memAddress +92, 1536);
		do Memory.poke(memAddress +124, 1536);
		do Memory.poke(memAddress +156, 1536);
		do Memory.poke(memAddress +188, 1536);
		do Memory.poke(memAddress +220, 1536);
		do Memory.poke(memAddress +252, 1536);
		do Memory.poke(memAddress +284, 1536);
		// column -3
		// column -2
		// column -1
		return;
	}


	function void deletecono1(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +384, 0);
		do Memory.poke(memAddress +416, 0);
		do Memory.poke(memAddress +448, 0);
		do Memory.poke(memAddress +480, 0);
		do Memory.poke(memAddress +512, 0);
		do Memory.poke(memAddress +544, 0);
		do Memory.poke(memAddress +576, 0);
		do Memory.poke(memAddress +608, 0);
		do Memory.poke(memAddress +640, 0);
		do Memory.poke(memAddress +672, 0);
		do Memory.poke(memAddress +704, 0);
		do Memory.poke(memAddress +736, 0);
		do Memory.poke(memAddress +768, 0);
		do Memory.poke(memAddress +800, 0);
		do Memory.poke(memAddress +832, 0);
		do Memory.poke(memAddress +864, 0);
		do Memory.poke(memAddress +896, 0);
		do Memory.poke(memAddress +928, 0);
		do Memory.poke(memAddress +960, 0);
		do Memory.poke(memAddress +992, 0);
		do Memory.poke(memAddress +1024, 0);
		do Memory.poke(memAddress +1056, 0);
		do Memory.poke(memAddress +1088, 0);
		do Memory.poke(memAddress +1120, 0);
		do Memory.poke(memAddress +1152, 0);
		do Memory.poke(memAddress +1184, 0);
		do Memory.poke(memAddress +1216, 0);
		do Memory.poke(memAddress +1248, 0);
		do Memory.poke(memAddress +1280, 0);
		do Memory.poke(memAddress +1312, 0);
		do Memory.poke(memAddress +1344, 0);
		do Memory.poke(memAddress +1376, 0);
		do Memory.poke(memAddress +1408, 0);
		do Memory.poke(memAddress +1440, 0);
		do Memory.poke(memAddress +1472, 0);
		do Memory.poke(memAddress +1504, 0);
		// column 1
		// column 2
		// column -2
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1374, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		// column -1
		do Memory.poke(memAddress -1, 0);
		do Memory.poke(memAddress +31, 0);
		do Memory.poke(memAddress +63, 0);
		do Memory.poke(memAddress +95, 0);
		do Memory.poke(memAddress +127, 0);
		do Memory.poke(memAddress +159, 0);
		do Memory.poke(memAddress +191, 0);
		do Memory.poke(memAddress +223, 0);
		do Memory.poke(memAddress +255, 0);
		do Memory.poke(memAddress +287, 0);
		do Memory.poke(memAddress +319, 0);
		do Memory.poke(memAddress +351, 0);
		do Memory.poke(memAddress +383, 0);
		do Memory.poke(memAddress +415, 0);
		do Memory.poke(memAddress +447, 0);
		do Memory.poke(memAddress +479, 0);
		do Memory.poke(memAddress +511, 0);
		do Memory.poke(memAddress +543, 0);
		do Memory.poke(memAddress +575, 0);
		do Memory.poke(memAddress +607, 0);
		do Memory.poke(memAddress +639, 0);
		do Memory.poke(memAddress +671, 0);
		do Memory.poke(memAddress +703, 0);
		do Memory.poke(memAddress +735, 0);
		do Memory.poke(memAddress +767, 0);
		do Memory.poke(memAddress +799, 0);
		do Memory.poke(memAddress +831, 0);
		do Memory.poke(memAddress +863, 0);
		do Memory.poke(memAddress +895, 0);
		do Memory.poke(memAddress +927, 0);
		do Memory.poke(memAddress +959, 0);
		do Memory.poke(memAddress +991, 0);
		do Memory.poke(memAddress +1023, 0);
		do Memory.poke(memAddress +1055, 0);
		do Memory.poke(memAddress +1151, 0);
		do Memory.poke(memAddress +1183, 0);
		do Memory.poke(memAddress +1215, 0);
		do Memory.poke(memAddress +1247, 0);
		do Memory.poke(memAddress +1279, 0);
		do Memory.poke(memAddress +1311, 0);
		do Memory.poke(memAddress +1407, 0);
		do Memory.poke(memAddress +1439, 0);
		do Memory.poke(memAddress +1471, 0);
		do Memory.poke(memAddress +1503, 0);
		return;
	}

	function void deletecono2(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +832, 0);
		do Memory.poke(memAddress +864, 0);
		do Memory.poke(memAddress +896, 0);
		do Memory.poke(memAddress +928, 0);
		do Memory.poke(memAddress +960, 0);
		do Memory.poke(memAddress +992, 0);
		do Memory.poke(memAddress +1024, 0);
		do Memory.poke(memAddress +1056, 0);
		do Memory.poke(memAddress +1088, 0);
		do Memory.poke(memAddress +1120, 0);
		do Memory.poke(memAddress +1152, 0);
		do Memory.poke(memAddress +1184, 0);
		do Memory.poke(memAddress +1216, 0);
		do Memory.poke(memAddress +1248, 0);
		do Memory.poke(memAddress +1280, 0);
		do Memory.poke(memAddress +1312, 0);
		do Memory.poke(memAddress +1344, 0);
		do Memory.poke(memAddress +1376, 0);
		do Memory.poke(memAddress +1408, 0);
		do Memory.poke(memAddress +1440, 0);
		do Memory.poke(memAddress +1472, 0);
		do Memory.poke(memAddress +1504, 0);
		// column 1
		// column -2
		do Memory.poke(memAddress +190, 0);
		do Memory.poke(memAddress +222, 0);
		do Memory.poke(memAddress +254, 0);
		do Memory.poke(memAddress +286, 0);
		do Memory.poke(memAddress +318, 0);
		do Memory.poke(memAddress +350, 0);
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		// column -1
		do Memory.poke(memAddress -1, 0);
		do Memory.poke(memAddress +31, 0);
		do Memory.poke(memAddress +63, 0);
		do Memory.poke(memAddress +95, 0);
		do Memory.poke(memAddress +127, 0);
		do Memory.poke(memAddress +159, 0);
		do Memory.poke(memAddress +191, 0);
		do Memory.poke(memAddress +223, 0);
		do Memory.poke(memAddress +255, 0);
		do Memory.poke(memAddress +287, 0);
		do Memory.poke(memAddress +319, 0);
		do Memory.poke(memAddress +351, 0);
		do Memory.poke(memAddress +383, 0);
		do Memory.poke(memAddress +415, 0);
		do Memory.poke(memAddress +447, 0);
		do Memory.poke(memAddress +479, 0);
		do Memory.poke(memAddress +511, 0);
		do Memory.poke(memAddress +543, 0);
		do Memory.poke(memAddress +575, 0);
		do Memory.poke(memAddress +607, 0);
		do Memory.poke(memAddress +639, 0);
		do Memory.poke(memAddress +671, 0);
		do Memory.poke(memAddress +703, 0);
		do Memory.poke(memAddress +735, 0);
		do Memory.poke(memAddress +767, 0);
		do Memory.poke(memAddress +799, 0);
		do Memory.poke(memAddress +831, 0);
		do Memory.poke(memAddress +863, 0);
		do Memory.poke(memAddress +895, 0);
		do Memory.poke(memAddress +927, 0);
		do Memory.poke(memAddress +959, 0);
		do Memory.poke(memAddress +991, 0);
		do Memory.poke(memAddress +1023, 0);
		do Memory.poke(memAddress +1055, 0);
		do Memory.poke(memAddress +1087, 0);
		do Memory.poke(memAddress +1119, 0);
		do Memory.poke(memAddress +1151, 0);
		do Memory.poke(memAddress +1183, 0);
		do Memory.poke(memAddress +1215, 0);
		do Memory.poke(memAddress +1247, 0);
		do Memory.poke(memAddress +1279, 0);
		do Memory.poke(memAddress +1311, 0);
		do Memory.poke(memAddress +1407, 0);
		do Memory.poke(memAddress +1439, 0);
		do Memory.poke(memAddress +1471, 0);
		do Memory.poke(memAddress +1503, 0);
		return;
	}

	function void deletecono3(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress +896, 0);
		do Memory.poke(memAddress +928, 0);
		do Memory.poke(memAddress +960, 0);
		do Memory.poke(memAddress +992, 0);
		do Memory.poke(memAddress +1024, 0);
		do Memory.poke(memAddress +1056, 0);
		do Memory.poke(memAddress +1088, 0);
		do Memory.poke(memAddress +1120, 0);
		do Memory.poke(memAddress +1152, 0);
		do Memory.poke(memAddress +1184, 0);
		do Memory.poke(memAddress +1216, 0);
		do Memory.poke(memAddress +1248, 0);
		do Memory.poke(memAddress +1280, 0);
		do Memory.poke(memAddress +1312, 0);
		do Memory.poke(memAddress +1344, 0);
		do Memory.poke(memAddress +1376, 0);
		do Memory.poke(memAddress +1408, 0);
		do Memory.poke(memAddress +1440, 0);
		// column 1
		// column -2
		do Memory.poke(memAddress -2, 0);
		do Memory.poke(memAddress +30, 0);
		do Memory.poke(memAddress +62, 0);
		do Memory.poke(memAddress +94, 0);
		do Memory.poke(memAddress +126, 0);
		do Memory.poke(memAddress +158, 0);
		do Memory.poke(memAddress +190, 0);
		do Memory.poke(memAddress +222, 0);
		do Memory.poke(memAddress +254, 0);
		do Memory.poke(memAddress +286, 0);
		do Memory.poke(memAddress +318, 0);
		do Memory.poke(memAddress +350, 0);
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		// column -1
		do Memory.poke(memAddress -1, 0);
		do Memory.poke(memAddress +31, 0);
		do Memory.poke(memAddress +63, 0);
		do Memory.poke(memAddress +95, 0);
		do Memory.poke(memAddress +127, 0);
		do Memory.poke(memAddress +159, 0);
		do Memory.poke(memAddress +191, 0);
		do Memory.poke(memAddress +223, 0);
		do Memory.poke(memAddress +255, 0);
		do Memory.poke(memAddress +287, 0);
		do Memory.poke(memAddress +319, 0);
		do Memory.poke(memAddress +351, 0);
		do Memory.poke(memAddress +383, 0);
		do Memory.poke(memAddress +415, 0);
		do Memory.poke(memAddress +447, 0);
		do Memory.poke(memAddress +479, 0);
		do Memory.poke(memAddress +511, 0);
		do Memory.poke(memAddress +543, 0);
		do Memory.poke(memAddress +575, 0);
		do Memory.poke(memAddress +607, 0);
		do Memory.poke(memAddress +639, 0);
		do Memory.poke(memAddress +671, 0);
		do Memory.poke(memAddress +703, 0);
		do Memory.poke(memAddress +735, 0);
		do Memory.poke(memAddress +767, 0);
		do Memory.poke(memAddress +799, 0);
		do Memory.poke(memAddress +831, 0);
		do Memory.poke(memAddress +863, 0);
		do Memory.poke(memAddress +895, 0);
		do Memory.poke(memAddress +927, 0);
		do Memory.poke(memAddress +959, 0);
		do Memory.poke(memAddress +991, 0);
		do Memory.poke(memAddress +1023, 0);
		do Memory.poke(memAddress +1055, 0);
		do Memory.poke(memAddress +1087, 0);
		do Memory.poke(memAddress +1119, 0);
		do Memory.poke(memAddress +1151, 0);
		do Memory.poke(memAddress +1183, 0);
		do Memory.poke(memAddress +1215, 0);
		do Memory.poke(memAddress +1247, 0);
		do Memory.poke(memAddress +1279, 0);
		do Memory.poke(memAddress +1311, 0);
		do Memory.poke(memAddress +1343, 0);
		do Memory.poke(memAddress +1375, 0);
		do Memory.poke(memAddress +1407, 0);
		do Memory.poke(memAddress +1439, 0);
		do Memory.poke(memAddress +1471, 0);
		do Memory.poke(memAddress +1503, 0);
		return;
	}

	function void deletecono4(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -2, 0);
		do Memory.poke(memAddress +30, 0);
		do Memory.poke(memAddress +62, 0);
		do Memory.poke(memAddress +94, 0);
		do Memory.poke(memAddress +126, 0);
		do Memory.poke(memAddress +158, 0);
		do Memory.poke(memAddress +190, 0);
		do Memory.poke(memAddress +222, 0);
		do Memory.poke(memAddress +254, 0);
		do Memory.poke(memAddress +286, 0);
		do Memory.poke(memAddress +318, 0);
		do Memory.poke(memAddress +350, 0);
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		// column -1
		do Memory.poke(memAddress +63, 0);
		do Memory.poke(memAddress +95, 0);
		do Memory.poke(memAddress +127, 0);
		do Memory.poke(memAddress +159, 0);
		do Memory.poke(memAddress +191, 0);
		do Memory.poke(memAddress +223, 0);
		do Memory.poke(memAddress +255, 0);
		do Memory.poke(memAddress +287, 0);
		do Memory.poke(memAddress +319, 0);
		do Memory.poke(memAddress +351, 0);
		do Memory.poke(memAddress +383, 0);
		do Memory.poke(memAddress +415, 0);
		do Memory.poke(memAddress +447, 0);
		do Memory.poke(memAddress +479, 0);
		do Memory.poke(memAddress +511, 0);
		do Memory.poke(memAddress +543, 0);
		do Memory.poke(memAddress +575, 0);
		do Memory.poke(memAddress +607, 0);
		do Memory.poke(memAddress +639, 0);
		do Memory.poke(memAddress +671, 0);
		do Memory.poke(memAddress +703, 0);
		do Memory.poke(memAddress +735, 0);
		do Memory.poke(memAddress +767, 0);
		do Memory.poke(memAddress +799, 0);
		do Memory.poke(memAddress +831, 0);
		do Memory.poke(memAddress +863, 0);
		do Memory.poke(memAddress +895, 0);
		do Memory.poke(memAddress +927, 0);
		do Memory.poke(memAddress +959, 0);
		do Memory.poke(memAddress +991, 0);
		do Memory.poke(memAddress +1023, 0);
		do Memory.poke(memAddress +1055, 0);
		do Memory.poke(memAddress +1087, 0);
		do Memory.poke(memAddress +1119, 0);
		do Memory.poke(memAddress +1151, 0);
		do Memory.poke(memAddress +1183, 0);
		do Memory.poke(memAddress +1215, 0);
		do Memory.poke(memAddress +1247, 0);
		do Memory.poke(memAddress +1279, 0);
		do Memory.poke(memAddress +1311, 0);
		do Memory.poke(memAddress +1343, 0);
		do Memory.poke(memAddress +1375, 0);
		do Memory.poke(memAddress +1407, 0);
		do Memory.poke(memAddress +1439, 0);
		do Memory.poke(memAddress +1471, 0);
		do Memory.poke(memAddress +1503, 0);
		return;
	}

	function void deletecono5(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -2, 0);
		do Memory.poke(memAddress +30, 0);
		do Memory.poke(memAddress +62, 0);
		do Memory.poke(memAddress +94, 0);
		do Memory.poke(memAddress +126, 0);
		do Memory.poke(memAddress +158, 0);
		do Memory.poke(memAddress +190, 0);
		do Memory.poke(memAddress +222, 0);
		do Memory.poke(memAddress +254, 0);
		do Memory.poke(memAddress +286, 0);
		do Memory.poke(memAddress +318, 0);
		do Memory.poke(memAddress +350, 0);
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		// column -1
		do Memory.poke(memAddress +383, 0);
		do Memory.poke(memAddress +415, 0);
		do Memory.poke(memAddress +447, 0);
		do Memory.poke(memAddress +479, 0);
		do Memory.poke(memAddress +511, 0);
		do Memory.poke(memAddress +543, 0);
		do Memory.poke(memAddress +575, 0);
		do Memory.poke(memAddress +607, 0);
		do Memory.poke(memAddress +639, 0);
		do Memory.poke(memAddress +671, 0);
		do Memory.poke(memAddress +703, 0);
		do Memory.poke(memAddress +735, 0);
		do Memory.poke(memAddress +767, 0);
		do Memory.poke(memAddress +799, 0);
		do Memory.poke(memAddress +831, 0);
		do Memory.poke(memAddress +863, 0);
		do Memory.poke(memAddress +895, 0);
		do Memory.poke(memAddress +927, 0);
		do Memory.poke(memAddress +959, 0);
		do Memory.poke(memAddress +991, 0);
		do Memory.poke(memAddress +1023, 0);
		do Memory.poke(memAddress +1055, 0);
		do Memory.poke(memAddress +1087, 0);
		do Memory.poke(memAddress +1119, 0);
		do Memory.poke(memAddress +1151, 0);
		do Memory.poke(memAddress +1183, 0);
		do Memory.poke(memAddress +1215, 0);
		do Memory.poke(memAddress +1247, 0);
		do Memory.poke(memAddress +1279, 0);
		do Memory.poke(memAddress +1311, 0);
		do Memory.poke(memAddress +1343, 0);
		do Memory.poke(memAddress +1375, 0);
		do Memory.poke(memAddress +1407, 0);
		do Memory.poke(memAddress +1439, 0);
		do Memory.poke(memAddress +1471, 0);
		do Memory.poke(memAddress +1503, 0);
		return;
	}

	function void deletecono6(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +893, 0);
		do Memory.poke(memAddress +925, 0);
		do Memory.poke(memAddress +957, 0);
		do Memory.poke(memAddress +989, 0);
		do Memory.poke(memAddress +1021, 0);
		do Memory.poke(memAddress +1053, 0);
		do Memory.poke(memAddress +1213, 0);
		do Memory.poke(memAddress +1245, 0);
		do Memory.poke(memAddress +1277, 0);
		do Memory.poke(memAddress +1309, 0);
		do Memory.poke(memAddress +1405, 0);
		do Memory.poke(memAddress +1437, 0);
		do Memory.poke(memAddress +1469, 0);
		do Memory.poke(memAddress +1501, 0);
		// column -2
		do Memory.poke(memAddress -2, 0);
		do Memory.poke(memAddress +30, 0);
		do Memory.poke(memAddress +62, 0);
		do Memory.poke(memAddress +94, 0);
		do Memory.poke(memAddress +126, 0);
		do Memory.poke(memAddress +158, 0);
		do Memory.poke(memAddress +190, 0);
		do Memory.poke(memAddress +222, 0);
		do Memory.poke(memAddress +254, 0);
		do Memory.poke(memAddress +286, 0);
		do Memory.poke(memAddress +318, 0);
		do Memory.poke(memAddress +350, 0);
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		// column -1
		do Memory.poke(memAddress +831, 0);
		do Memory.poke(memAddress +863, 0);
		do Memory.poke(memAddress +895, 0);
		do Memory.poke(memAddress +927, 0);
		do Memory.poke(memAddress +959, 0);
		do Memory.poke(memAddress +991, 0);
		do Memory.poke(memAddress +1023, 0);
		do Memory.poke(memAddress +1055, 0);
		do Memory.poke(memAddress +1087, 0);
		do Memory.poke(memAddress +1119, 0);
		do Memory.poke(memAddress +1151, 0);
		do Memory.poke(memAddress +1183, 0);
		do Memory.poke(memAddress +1215, 0);
		do Memory.poke(memAddress +1247, 0);
		do Memory.poke(memAddress +1279, 0);
		do Memory.poke(memAddress +1311, 0);
		do Memory.poke(memAddress +1343, 0);
		do Memory.poke(memAddress +1375, 0);
		do Memory.poke(memAddress +1407, 0);
		do Memory.poke(memAddress +1439, 0);
		do Memory.poke(memAddress +1471, 0);
		do Memory.poke(memAddress +1503, 0);
		return;
	}

	function void deletecono7(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +701, 0);
		do Memory.poke(memAddress +733, 0);
		do Memory.poke(memAddress +957, 0);
		do Memory.poke(memAddress +989, 0);
		do Memory.poke(memAddress +1021, 0);
		do Memory.poke(memAddress +1053, 0);
		do Memory.poke(memAddress +1213, 0);
		do Memory.poke(memAddress +1245, 0);
		do Memory.poke(memAddress +1277, 0);
		do Memory.poke(memAddress +1309, 0);
		do Memory.poke(memAddress +1405, 0);
		do Memory.poke(memAddress +1437, 0);
		do Memory.poke(memAddress +1469, 0);
		do Memory.poke(memAddress +1501, 0);
		// column -2
		do Memory.poke(memAddress -2, 0);
		do Memory.poke(memAddress +30, 0);
		do Memory.poke(memAddress +62, 0);
		do Memory.poke(memAddress +94, 0);
		do Memory.poke(memAddress +126, 0);
		do Memory.poke(memAddress +158, 0);
		do Memory.poke(memAddress +190, 0);
		do Memory.poke(memAddress +222, 0);
		do Memory.poke(memAddress +254, 0);
		do Memory.poke(memAddress +286, 0);
		do Memory.poke(memAddress +318, 0);
		do Memory.poke(memAddress +350, 0);
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1342, 0);
		do Memory.poke(memAddress +1374, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		// column -1
		do Memory.poke(memAddress +895, 0);
		do Memory.poke(memAddress +927, 0);
		do Memory.poke(memAddress +959, 0);
		do Memory.poke(memAddress +991, 0);
		do Memory.poke(memAddress +1023, 0);
		do Memory.poke(memAddress +1055, 0);
		do Memory.poke(memAddress +1087, 0);
		do Memory.poke(memAddress +1119, 0);
		do Memory.poke(memAddress +1151, 0);
		do Memory.poke(memAddress +1183, 0);
		do Memory.poke(memAddress +1215, 0);
		do Memory.poke(memAddress +1247, 0);
		do Memory.poke(memAddress +1279, 0);
		do Memory.poke(memAddress +1311, 0);
		do Memory.poke(memAddress +1343, 0);
		do Memory.poke(memAddress +1375, 0);
		do Memory.poke(memAddress +1407, 0);
		do Memory.poke(memAddress +1439, 0);
		return;
	}

	function void deletecono8(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +701, 0);
		do Memory.poke(memAddress +733, 0);
		do Memory.poke(memAddress +957, 0);
		do Memory.poke(memAddress +989, 0);
		do Memory.poke(memAddress +1021, 0);
		do Memory.poke(memAddress +1053, 0);
		do Memory.poke(memAddress +1213, 0);
		do Memory.poke(memAddress +1245, 0);
		do Memory.poke(memAddress +1277, 0);
		do Memory.poke(memAddress +1309, 0);
		do Memory.poke(memAddress +1405, 0);
		do Memory.poke(memAddress +1437, 0);
		do Memory.poke(memAddress +1469, 0);
		do Memory.poke(memAddress +1501, 0);
		// column -2
		do Memory.poke(memAddress +62, 0);
		do Memory.poke(memAddress +94, 0);
		do Memory.poke(memAddress +126, 0);
		do Memory.poke(memAddress +158, 0);
		do Memory.poke(memAddress +190, 0);
		do Memory.poke(memAddress +222, 0);
		do Memory.poke(memAddress +254, 0);
		do Memory.poke(memAddress +286, 0);
		do Memory.poke(memAddress +318, 0);
		do Memory.poke(memAddress +350, 0);
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1342, 0);
		do Memory.poke(memAddress +1374, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		return;
	}

	function void deletecono9(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +509, 0);
		do Memory.poke(memAddress +541, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +701, 0);
		do Memory.poke(memAddress +733, 0);
		do Memory.poke(memAddress +829, 0);
		do Memory.poke(memAddress +861, 0);
		do Memory.poke(memAddress +893, 0);
		do Memory.poke(memAddress +925, 0);
		do Memory.poke(memAddress +957, 0);
		do Memory.poke(memAddress +989, 0);
		do Memory.poke(memAddress +1021, 0);
		do Memory.poke(memAddress +1053, 0);
		do Memory.poke(memAddress +1213, 0);
		do Memory.poke(memAddress +1245, 0);
		do Memory.poke(memAddress +1277, 0);
		do Memory.poke(memAddress +1309, 0);
		do Memory.poke(memAddress +1405, 0);
		do Memory.poke(memAddress +1437, 0);
		do Memory.poke(memAddress +1469, 0);
		do Memory.poke(memAddress +1501, 0);
		// column -2
		do Memory.poke(memAddress +382, 0);
		do Memory.poke(memAddress +414, 0);
		do Memory.poke(memAddress +446, 0);
		do Memory.poke(memAddress +478, 0);
		do Memory.poke(memAddress +510, 0);
		do Memory.poke(memAddress +542, 0);
		do Memory.poke(memAddress +574, 0);
		do Memory.poke(memAddress +606, 0);
		do Memory.poke(memAddress +638, 0);
		do Memory.poke(memAddress +670, 0);
		do Memory.poke(memAddress +702, 0);
		do Memory.poke(memAddress +734, 0);
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1342, 0);
		do Memory.poke(memAddress +1374, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		do Memory.poke(memAddress +1470, 0);
		do Memory.poke(memAddress +1502, 0);
		return;
	}

	function void deletecono10(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +509, 0);
		do Memory.poke(memAddress +541, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +701, 0);
		do Memory.poke(memAddress +733, 0);
		do Memory.poke(memAddress +765, 0);
		do Memory.poke(memAddress +797, 0);
		do Memory.poke(memAddress +829, 0);
		do Memory.poke(memAddress +861, 0);
		do Memory.poke(memAddress +893, 0);
		do Memory.poke(memAddress +925, 0);
		do Memory.poke(memAddress +957, 0);
		do Memory.poke(memAddress +989, 0);
		do Memory.poke(memAddress +1021, 0);
		do Memory.poke(memAddress +1053, 0);
		do Memory.poke(memAddress +1085, 0);
		do Memory.poke(memAddress +1117, 0);
		do Memory.poke(memAddress +1149, 0);
		do Memory.poke(memAddress +1181, 0);
		do Memory.poke(memAddress +1213, 0);
		do Memory.poke(memAddress +1245, 0);
		do Memory.poke(memAddress +1341, 0);
		do Memory.poke(memAddress +1373, 0);
		do Memory.poke(memAddress +1405, 0);
		do Memory.poke(memAddress +1437, 0);
		// column -2
		do Memory.poke(memAddress +766, 0);
		do Memory.poke(memAddress +798, 0);
		do Memory.poke(memAddress +830, 0);
		do Memory.poke(memAddress +862, 0);
		do Memory.poke(memAddress +894, 0);
		do Memory.poke(memAddress +926, 0);
		do Memory.poke(memAddress +958, 0);
		do Memory.poke(memAddress +990, 0);
		do Memory.poke(memAddress +1022, 0);
		do Memory.poke(memAddress +1054, 0);
		do Memory.poke(memAddress +1086, 0);
		do Memory.poke(memAddress +1118, 0);
		do Memory.poke(memAddress +1150, 0);
		do Memory.poke(memAddress +1182, 0);
		do Memory.poke(memAddress +1214, 0);
		do Memory.poke(memAddress +1246, 0);
		do Memory.poke(memAddress +1278, 0);
		do Memory.poke(memAddress +1310, 0);
		do Memory.poke(memAddress +1342, 0);
		do Memory.poke(memAddress +1374, 0);
		do Memory.poke(memAddress +1406, 0);
		do Memory.poke(memAddress +1438, 0);
		return;
	}

	function void deletecono11(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +509, 0);
		do Memory.poke(memAddress +541, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +701, 0);
		do Memory.poke(memAddress +733, 0);
		do Memory.poke(memAddress +765, 0);
		do Memory.poke(memAddress +797, 0);
		do Memory.poke(memAddress +829, 0);
		do Memory.poke(memAddress +861, 0);
		do Memory.poke(memAddress +893, 0);
		do Memory.poke(memAddress +925, 0);
		do Memory.poke(memAddress +957, 0);
		do Memory.poke(memAddress +989, 0);
		do Memory.poke(memAddress +1021, 0);
		do Memory.poke(memAddress +1053, 0);
		do Memory.poke(memAddress +1085, 0);
		do Memory.poke(memAddress +1117, 0);
		do Memory.poke(memAddress +1149, 0);
		do Memory.poke(memAddress +1181, 0);
		do Memory.poke(memAddress +1213, 0);
		do Memory.poke(memAddress +1245, 0);
		do Memory.poke(memAddress +1277, 0);
		do Memory.poke(memAddress +1309, 0);
		// column -2
		do Memory.poke(memAddress +702, 1);
		do Memory.poke(memAddress +734, 1);
		do Memory.poke(memAddress +766, 1);
		do Memory.poke(memAddress +798, 1);
		do Memory.poke(memAddress +830, 1);
		do Memory.poke(memAddress +862, 1);
		do Memory.poke(memAddress +894, 6);
		do Memory.poke(memAddress +926, 6);
		do Memory.poke(memAddress +958, 6);
		do Memory.poke(memAddress +990, 6);
		do Memory.poke(memAddress +1022, 6);
		do Memory.poke(memAddress +1054, 6);
		do Memory.poke(memAddress +1086, 6);
		do Memory.poke(memAddress +1118, 6);
		do Memory.poke(memAddress +1150, 7);
		do Memory.poke(memAddress +1182, 7);
		do Memory.poke(memAddress +1214, 1);
		do Memory.poke(memAddress +1246, 1);
		return;
	}

	function void deletecono12(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +509, 0);
		do Memory.poke(memAddress +541, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +701, 0);
		do Memory.poke(memAddress +733, 0);
		do Memory.poke(memAddress +765, 0);
		do Memory.poke(memAddress +797, 0);
		do Memory.poke(memAddress +829, 0);
		do Memory.poke(memAddress +861, 0);
		do Memory.poke(memAddress +893, 0);
		do Memory.poke(memAddress +925, 0);
		do Memory.poke(memAddress +957, 0);
		do Memory.poke(memAddress +989, 0);
		do Memory.poke(memAddress +1021, 0);
		do Memory.poke(memAddress +1053, 0);
		do Memory.poke(memAddress +1085, 0);
		do Memory.poke(memAddress +1117, 0);
		return;
	}

	function void deletecono13(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +509, 0);
		do Memory.poke(memAddress +541, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		do Memory.poke(memAddress +701, 0);
		do Memory.poke(memAddress +733, 0);
		do Memory.poke(memAddress +765, 0);
		do Memory.poke(memAddress +797, 0);
		do Memory.poke(memAddress +829, 0);
		do Memory.poke(memAddress +861, 0);
		return;
	}

	function void deletecono14(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, 0);
		do Memory.poke(memAddress +28, 0);
		do Memory.poke(memAddress +60, 0);
		do Memory.poke(memAddress +92, 0);
		do Memory.poke(memAddress +124, 0);
		do Memory.poke(memAddress +156, 0);
		do Memory.poke(memAddress +188, 0);
		do Memory.poke(memAddress +220, 0);
		do Memory.poke(memAddress +252, 0);
		do Memory.poke(memAddress +284, 0);
		do Memory.poke(memAddress +316, 0);
		do Memory.poke(memAddress +348, 0);
		do Memory.poke(memAddress +572, 0);
		do Memory.poke(memAddress +604, 0);
		do Memory.poke(memAddress +636, 0);
		do Memory.poke(memAddress +668, 0);
		// column -3
		do Memory.poke(memAddress -3, 0);
		do Memory.poke(memAddress +29, 0);
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +509, 0);
		do Memory.poke(memAddress +541, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		do Memory.poke(memAddress +637, 0);
		do Memory.poke(memAddress +669, 0);
		return;
	}

	function void deletecono15(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, 0);
		do Memory.poke(memAddress +28, 0);
		do Memory.poke(memAddress +60, 0);
		do Memory.poke(memAddress +92, 0);
		do Memory.poke(memAddress +124, 0);
		do Memory.poke(memAddress +156, 0);
		do Memory.poke(memAddress +188, 0);
		do Memory.poke(memAddress +220, 0);
		do Memory.poke(memAddress +508, 0);
		do Memory.poke(memAddress +540, 0);
		do Memory.poke(memAddress +572, 0);
		do Memory.poke(memAddress +604, 0);
		do Memory.poke(memAddress +636, 0);
		do Memory.poke(memAddress +668, 0);
		// column -3
		do Memory.poke(memAddress +61, 0);
		do Memory.poke(memAddress +93, 0);
		do Memory.poke(memAddress +125, 0);
		do Memory.poke(memAddress +157, 0);
		do Memory.poke(memAddress +189, 0);
		do Memory.poke(memAddress +221, 0);
		do Memory.poke(memAddress +253, 0);
		do Memory.poke(memAddress +285, 0);
		do Memory.poke(memAddress +317, 0);
		do Memory.poke(memAddress +349, 0);
		do Memory.poke(memAddress +381, 0);
		do Memory.poke(memAddress +413, 0);
		do Memory.poke(memAddress +445, 0);
		do Memory.poke(memAddress +477, 0);
		do Memory.poke(memAddress +509, 0);
		do Memory.poke(memAddress +541, 0);
		do Memory.poke(memAddress +573, 0);
		do Memory.poke(memAddress +605, 0);
		return;
	}

	function void deletecono16(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, 0);
		do Memory.poke(memAddress +28, 0);
		do Memory.poke(memAddress +60, 0);
		do Memory.poke(memAddress +92, 0);
		do Memory.poke(memAddress +124, 0);
		do Memory.poke(memAddress +156, 0);
		do Memory.poke(memAddress +188, 0);
		do Memory.poke(memAddress +220, 0);
		do Memory.poke(memAddress +252, 0);
		do Memory.poke(memAddress +284, 0);
		do Memory.poke(memAddress +316, 0);
		do Memory.poke(memAddress +348, 0);
		do Memory.poke(memAddress +380, 0);
		do Memory.poke(memAddress +412, 0);
		do Memory.poke(memAddress +444, 0);
		do Memory.poke(memAddress +476, 0);
		do Memory.poke(memAddress +508, 0);
		do Memory.poke(memAddress +540, 0);
		return;
	}

	function void deletecono17(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		do Memory.poke(memAddress -4, 0);
		do Memory.poke(memAddress +28, 0);
		do Memory.poke(memAddress +60, 0);
		do Memory.poke(memAddress +92, 0);
		do Memory.poke(memAddress +124, 0);
		do Memory.poke(memAddress +156, 0);
		do Memory.poke(memAddress +188, 0);
		do Memory.poke(memAddress +220, 0);
		do Memory.poke(memAddress +252, 0);
		do Memory.poke(memAddress +284, 0);
		return;
	}

	function void deletecono18(int x, int y) {
		var int memAddress; 
		let memAddress = 16384+(x+y*32);
		// column 0
		return;
	}
}